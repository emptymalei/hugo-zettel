<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugo on Hugo Zettel</title><link>https://jannekem.github.io/hugo-zettel/tags/hugo/</link><description>Recent content in Hugo on Hugo Zettel</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 03 May 2020 18:23:42 +0300</lastBuildDate><atom:link href="https://jannekem.github.io/hugo-zettel/tags/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugo Sort Tags by Count</title><link>https://jannekem.github.io/hugo-zettel/2020/05/03/hugo-sort-tags-by-count/</link><pubDate>Sun, 03 May 2020 18:23:42 +0300</pubDate><guid>https://jannekem.github.io/hugo-zettel/2020/05/03/hugo-sort-tags-by-count/</guid><description>I wanted to sort the tags in the &amp;ldquo;Tags&amp;rdquo; page by the count of child pages. This can be achieved by creating a terms.html template page. From there the data can be fetched nicely:
{{range.Data.Terms.ByCount}} {{partial&amp;#34;widgets/tag.html&amp;#34;(dict&amp;#34;tag&amp;#34;.Page.Title&amp;#34;count&amp;#34;.Count)}} {{end}}</description></item><item><title>Hugo Partial Parameters</title><link>https://jannekem.github.io/hugo-zettel/2020/05/03/hugo-partial-parameters/</link><pubDate>Sun, 03 May 2020 16:35:33 +0300</pubDate><guid>https://jannekem.github.io/hugo-zettel/2020/05/03/hugo-partial-parameters/</guid><description>When implementing the Hugo Zettel theme I wanted to extract the tag element as a reusable widget inside the theme. The input requirements are:
tag name amount of posts with the tag However, the Hugo partials only take one input parameter where we typically pass the context. However, this didn&amp;rsquo;t feel like the right approach because the partial would need to know do different things based on the context it is in.</description></item><item><title>GitHub Markdown Tailwindcss</title><link>https://jannekem.github.io/hugo-zettel/2020/05/03/github-markdown-tailwindcss/</link><pubDate>Sun, 03 May 2020 14:13:25 +0300</pubDate><guid>https://jannekem.github.io/hugo-zettel/2020/05/03/github-markdown-tailwindcss/</guid><description>Due to the nature of the Tailwind CSS library there is no pre-built support for handling Markdown. Luckily, there is this GitHub repository iandinwoodie/github-markdown-tailwindcss that has implemented support for it.
Usage Add class markdown to the element that you want to style. With Hugo you can add this kind of snippet:
&amp;lt;div class=&amp;#34;markdown&amp;#34;&amp;gt; {{ .Content }} &amp;lt;/div&amp;gt;</description></item><item><title>Hugo</title><link>https://jannekem.github.io/hugo-zettel/2020/05/03/hugo/</link><pubDate>Sun, 03 May 2020 12:38:32 +0300</pubDate><guid>https://jannekem.github.io/hugo-zettel/2020/05/03/hugo/</guid><description>Hugo is a static site generator written in Go.</description></item><item><title>Hugo Taxonomies</title><link>https://jannekem.github.io/hugo-zettel/2020/05/03/hugo-taxonomies/</link><pubDate>Sun, 03 May 2020 12:36:31 +0300</pubDate><guid>https://jannekem.github.io/hugo-zettel/2020/05/03/hugo-taxonomies/</guid><description>Taxonomies are user defined groupings of content. 1
Taxonomies are configured in the config.toml file like this
[taxonomies] category = &amp;#34;categories&amp;#34; tag = &amp;#34;tags&amp;#34; The first part defines the singular form and the scond part the plural form.
Taxonomies can be accessed on special taxonomy pages or sitewide with the .Site.Taxonomies variable. For example the .Site.Taxonomies.tags can be used to fetch a map of tags which will return a mapping of taxonomy keys with lists of pages that contain those tags.</description></item><item><title>Hugo content sections</title><link>https://jannekem.github.io/hugo-zettel/2020/05/01/hugo-content-sections/</link><pubDate>Sat, 02 May 2020 23:21:29 +0300</pubDate><guid>https://jannekem.github.io/hugo-zettel/2020/05/01/hugo-content-sections/</guid><description>Sections are defined by the content structure based on the first directory under the content directory, so called root sections. Nested sections require an _index.md file inside the directory. 1</description></item><item><title>Hugo Zettelkasten</title><link>https://jannekem.github.io/hugo-zettel/2020/05/01/hugo-zettelkasten/</link><pubDate>Sat, 02 May 2020 22:44:29 +0300</pubDate><guid>https://jannekem.github.io/hugo-zettel/2020/05/01/hugo-zettelkasten/</guid><description>&lt;p>Hugo theme for taking notes with the &lt;a href="https://www.reddit.com/r/Zettelkasten/comments/b566a4/what_is_a_zettelkasten/">Zettelkasten method&lt;/a>.&lt;/p>
&lt;p>Zettelkasten can be considered as an extension to your brain where you process and store data and make connections between ideas.&lt;/p></description></item><item><title>Using NPM with Hugo</title><link>https://jannekem.github.io/hugo-zettel/2020/05/01/hugo-npm/</link><pubDate>Sat, 02 May 2020 22:21:29 +0300</pubDate><guid>https://jannekem.github.io/hugo-zettel/2020/05/01/hugo-npm/</guid><description>How to use NPM packages in Hugo?
Prerequisites for Hugo Pipe&amp;rsquo;s PostCSS 1
npm install -g postcss-cli npm install -g autoprefixer</description></item><item><title>Tailwind CSS</title><link>https://jannekem.github.io/hugo-zettel/2020/05/01/tailwind-css/</link><pubDate>Sat, 02 May 2020 22:11:00 +0300</pubDate><guid>https://jannekem.github.io/hugo-zettel/2020/05/01/tailwind-css/</guid><description>Tailwind is a low-level CSS framework for building web pages with building blocks.
unopinionated low-level utility classes work from HTML responsive component friendly customizable</description></item></channel></rss>